@using System.Globalization
@using Entities.Constants
@using Services.Interface

@inject IToastService _toastService
@inject IJSRuntime _js

<input id="@Id" class="form-control"  @bind="Text" />

@code {
    [Parameter] public string Id { get; set; } = $"datepicker-{Guid.NewGuid()}";
    [Parameter] public EventCallback<DateTime> ValueChanged { get; set; }
    [Parameter] public bool TimePicker { get; set; } = false;
    private DateTime _value;
    [Parameter]
    public DateTime Value
    {
        get => _value;
        set
        {
            if (_value != value)
            {
                _value = value;
                ValueChanged.InvokeAsync(value);
            }
        }
    }
    private string _text;
    public string Text{
        get => _text;
        set  {
            if (_text != value)
            {
                _text = Value.ToString(GlobalConstants.DefaultDateTimeFormat);
            }
        }
    }
    private DotNetObjectReference<DateInput> _objectReference;
    protected override void OnParametersSet()
    {
        Text = Value.ToString(GlobalConstants.DefaultDateTimeFormat);
        base.OnParametersSet();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _objectReference = DotNetObjectReference.Create(this);
            if(TimePicker){
                await _js.InvokeVoidAsync("JQueryFunctions.initDateTimePicker", Id, _objectReference);
            }
            else{
                await _js.InvokeVoidAsync("JQueryFunctions.initDatePicker", Id, _objectReference);
            }
        }
    }

    [JSInvokable]
    public async Task UpdateDate(string date)
    {
        if (DateTime.TryParseExact(date, GlobalConstants.DefaultDateTimeFormat,
            CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime dt))
        {
            Value = dt;
            Text = Value.ToString(GlobalConstants.DefaultDateTimeFormat);
            await ValueChanged.InvokeAsync(Value);
        }
        else
        {
            _toastService.ShowError("Please enter a proper date!");
        }
    }
}
